  1.   |echo|                                           [SF]
  2.   |echo Ã±|                                         [SF]
  3.   |echo hi|                                        [SF]
  4.   |/bin/echo hi|                                   [SF]
  5.   |echo $PATH|                                     [SF]
  6.   |echo $NONEXIST|                                 [SF]
  7.   |echoecho|                                       [SF]
  8.   |echo -n|                                        [SF]
  9.   |echo -n hi|                                     [SF]
  10.  |echo --n hi|                                    [SF]
  11.  |echo -nn hi|                                    [SF]
  12.  |echo -n -n hi|                                  [SF]
  13.  |echo hi -n|                                     [SF]
  14.  |echo "-n -n -n" -n hi|                          [SF]
  15.  |check if launch execve|                         [SF]
  16.  |check if builtin is not correct|                [SF]
  17.  |EXECVE THE ECHO?|                               [SF]
  18.  |not builtin without PATH|                       [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ]

  To see full failure traces -> traces/echo_trace.txt


|=========================[ EXPORT ]=========================|


  19.  |export 1A=value|                                [SF]
  20.  |export /A=value|                                [SF]
  21.  |export A/=value|                                [SF]
  22.  |export 'A=value'|                               [SF]
  23.  |export ' A=value'|                              [SF]
  24.  |export 'A =value'|                              [SF]
  25.  |export TEST=test|                               [SF]
  26.  |export TEST=test TESTT=test2|                   [SF]
  27.  |export TEST=test W:RON:G=wrong TESTT=test2|     [SF]
  28.  |export EMPTY EMPTY_TOO= NOT_EMPTY=contnent|     [SF]
  29.  |export TEST=value TEST=value2|                  [SF]
  30.  |export TEST+=" added value"|                    [SF]
  31.  |export existing variable|                       [SF]
  32.  |export correct=correct wrong%=wrong|            [SF]
  33.  |export wrong%=wrong correct=correct|            [SF]
  34.  | whoami|                                        [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 ]

  To see full failure traces -> traces/export_trace.txt


|===========================[ ENV ]==========================|


  35.  |env with export TESTVAR|                        [SF]
  36.  |env with export TESTVAR=|                       [SF]
  37.  |env with export TESTVAR=""|                     [SF]
  38.  |env with export TESTVAR="value"|                [SF]
  39.  |env with export TESTVAR (in mini)|              [SF]
  40.  |env with export TESTVAR= (in mini)|             [SF]
  41.  |env with export TESTVAR="" (in mini)|           [SF]
  42.  |env with export TESTVAR"value" (in mini)|       [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 35 36 37 38 39 40 41 42 ]

  To see full failure traces -> traces/env_trace.txt


|==========================[ EXIT ]==========================|


  43.  |exit|                                           [K0]
  44.  |exit ""|                                        [K0]
  45.  |exit " "|                                       [K0]
  46.  |exit "  "|                                      [K0]
  47.  |exit "  "|                                       [K0]
  48.  |exit 42network|                                 [K0]
  49.  |exit +|                                         [K0]
  50.  |exit ++|                                        [K0]
  51.  |exit -|                                         [K0]
  52.  |exit ---|                                       [K0]
  53.  |exit 0|                                         [K0]
  54.  |exit +0|                                        [K0]
  55.  |exit ++0|                                       [K0]
  56.  |exit -0|                                        [K0]
  57.  |exit --0|                                       [K0]
  58.  |exit 1|                                         [K0]
  59.  |exit +1|                                        [K0]
  60.  |exit ++1|                                       [K0]
  61.  |exit -1|                                        [K0]
  62.  |exit --1|                                       [K0]
  63.  |exit ' 3'|                                      [K0]
  64.  |exit '3 '|                                      [K0]
  65.  |exit 255|                                       [K0]
  66.  |exit -255|                                      [K0]
  67.  |exit 256|                                       [K0]
  68.  |exit -256|                                      [K0]
  69.  |exit 2147483647|                                [K0]
  70.  |exit 2147483648|                                [K0]
  71.  |exit -2147483648|                               [K0]
  72.  |exit -2147483649|                               [K0]
  73.  |exit 4294967295|                                [K0]
  74.  |exit 4294967296|                                [K0]
  75.  |exit -4294967296|                               [K0]
  76.  |exit -4294967297|                               [K0]
  77.  |exit 9223372036854775807|                       [K0]
  78.  |exit 9223372036854775808|                       [K0]
  79.  |exit -9223372036854775808|                      [K0]
  80.  |exit -9223372036854775809|                      [K0]
  81.  |exit 18446744073709551615|                      [K0]
  82.  |exit 18446744073709551616|                      [K0]
  83.  |exit -18446744073709551616|                     [K0]
  84.  |exit -18446744073709551617|                     [K0]
  85.  |exit 9999999999999999999999|                    [K0]
  86.  |exit 0000000000000000000000|                    [K0]
  87.  |exit 0000000000000000000001|                    [K0]
  88.  |exit 1 2 3|                                     [SF]
  89.  |echo should not exit|                           [SF]
  90.  |exit 1 not numeric bro|                         [SF]
  91.  |exit not numeric bro 2|                         [K0]
  92.  |exit 42 | cat|                                  [K0]
  93.  |echo is not a buildin!|                         [SF]
  94.  |not found then exit|                            [SF]
  95.  |not found then exit 1|                          [SF]
  96.  |permission deny then exit|                      [K0]
  97.  |permission deny then exit 1|                    [K0]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 88 89 90 93 94 95 ]

  To see full failure traces -> traces/exit_trace.txt


|========================[ DIRECTORY ]=======================|


  98.  |pwd|                                            [SF]
  99.  |cd|                                             [SF]
  100. |cd ""|                                          [SF]
  101. |cd " "|                                         [SF]
  102. |cd "" ""|                                       [SF]
  103. |cd / non_existent|                              [SF]
  104. |cd /.|                                          [SF]
  105. |cd //|                                          [SF]
  106. |cd ' / '|                                       [SF]
  107. |pwd|                                            [SF]
  108. |pwd argument|                                   [SF]
  109. |pwd argument1 argument2|                        [SF]
  110. |cd file|                                        [SF]
  111. |cd file (no permission)|                        [SF]
  112. |cd file/non_existent|                           [SF]
  113. |cd non_exist|                                   [SF]
  114. |cd ..|                                          [SF]
  115. |cd ~|                                           [SF]
  116. |cd ~|                                           [SF]
  117. |cd .|                                           [SF]
  118. |cd testdirtest(no permision)|                   [SF]
  119. |cd maxpathlen|                                  [SF]
  120. |cd maxpathlen + 1|                              [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 ]

  To see full failure traces -> traces/directory_trace.txt


|=========================[ PARSER ]=========================|

    ----------------------[ dollar ]---------------------

  121. |echo $?|                                        [SF]
  122. |echo $|                                         [SF]
  123. |echo hi$|                                       [SF]
  124. |echo '$ '|                                      [SF]
  125. |echo $/|                                        [SF]
  126. |echo "'$'"|                                     [SF]
  127. |echo $'\n'|                                     [SF]
  128. |echo $'\r'|                                     [SF]
  129. |echo $'\t'|                                     [SF]
  130. |echo $USER|                                     [SF]
  131. |echo $NONEXIST|                                 [SF]
  132. |echo $USER$PATH$PWD|                            [SF]
  133. |echo "$USER$PATH$PWD"|                          [SF]
  134. |echo '$USER$PATH$PWD'|                          [SF]
  135. |echo '$USER",$PATH,$PWD'|                       [SF]
  136. |echo $USER"$PATH"$PWD"USER"$PATH"$PWD"|         [SF]
  137. |echo $USER'$PATH'$PWD'USER'$PATH'$PWD'|         [SF]
  138. |$NONEXIST|                                      [SF]
  139. |$NONEXIST $NONEXIST|                            [SF]
  140. |VAR: export TMPENVVAR|                          [SF]
  141. |VAR: export TMPENVVAR=echo|                     [SF]
  142. |VAR: export TMPENVVAR="  echo"|                 [SF]
  143. |VAR: export TMPENVVAR="    EcHO   hi"|          [SF]
  144. |VAR: export TMPENVVAR="-n"|                     [SF]
  145. |VAR: export TMPENVVAR="-n -n"|                  [SF]
  146. |echo $A"$B"$C"A"$B"$C"|                         [SF]
  147. |echo $A'$B'$C'A'$B'$C'|                         [SF]
  148. |echo $A"$B"$C"A"$B"$C"|                         [SF]
  149. |echo $A'$B'$C'A'$B'$C'|                         [SF]
  150. |echo $A|                                        [SF]
  151. |echo $A$B|                                      [SF]
  152. |echo $A$B$C|                                    [SF]
  153. |echo $A$B$C$AA|                                 [SF]

    ----------------------[ quotes ]---------------------

  154. |echo "~"ups|                                    [SF]
  155. |echo '~'ups|                                    [SF]
  156. |echo "'$'"|                                     [SF]
  157. |echo '"$"'|                                     [SF]
  158. |echo "|$USER|"|                                 [SF]
  159. |echo "|$USE|"|                                  [SF]
  160. |echo "|$USER_|"|                                [SF]
  161. |echo '|$USER|'|                                 [SF]
  162. |echo '|$USE|'|                                  [SF]
  163. |echo '|$USER_|'|                                [SF]
  164. |'echo' hi|                                      [SF]
  165. |'''echo' hi|                                    [SF]
  166. |'echo' 'hi'|                                    [SF]
  167. |'echo' 'hi'''|                                  [SF]
  168. |'echo' 'hi' ''|                                 [SF]
  169. |"echo" hi|                                      [SF]
  170. |"""echo" hi|                                    [SF]
  171. |"echo" "hi"|                                    [SF]
  172. |"echo" "hi"""|                                  [SF]
  173. |"echo" "hi" ""|                                 [SF]
  174. |echo '""""""""""""'|                            [SF]
  175. |'echo' "hi"'' " ' "' "' "" ''''''""|            [SF]
  176. |echo hi"hi" hi'h"i'|                            [SF]
  177. |echo "hi" "hi"|                                 [SF]
  178. |echo "hi"  "hi"|                                [SF]
  179. |echo "hi"tab"hi"|                               [SF]
  180. |" echo"|                                        [SF]
  181. |' echo'|                                        [SF]
  182. |""echo|                                         [SF]
  183. |" "echo|                                        [SF]
  184. |''echo|                                         [SF]
  185. |' 'echo|                                        [SF]
  186. |''''''''''echo hi|                              [SF]
  187. |""""""""""echo hi|                              [SF]
  188. |"e"'c'h"o" hi|                                  [SF]
  189. |ec""ho hi|                                      [SF]
  190. |ec""h''o hi|                                    [SF]
  191. |EcHo hi|                                        [SF]
  192. |ECHO hi|                                        [SF]
  193. |"ECHO" hi|                                      [SF]
  194. |'ECHO' hi|                                      [SF]
  195. |echo    t  hi   t|                              [SF]
  196. |echo "   t  hi   t    "|                        [SF]
  197. |echo '   t  hi   t    '|                        [SF]
  198. |echo $"   t  hi   t    "|                       [SF]
  199. |echo $'   t  hi   t    '|                       [SF]
  200. |echo $'   r  hi   t    '|                       [SF]
  201. |echo hi > "fi le"|                              [SF]
  202. |echo hi > 'fi le'|                              [SF]
  203. |echo $ANA_VAR with spaces in var value|         [SF]
  204. |echo "$ANA_VAR" with spaces in var value|       [SF]
  205. |echo '$ANA_VAR' with spaces in var value|       [SF]

    ----------------------[ spaces ]---------------------

  206. |""|                                             [SF]
  207. |" "|                                            [SF]
  208. |\techo hi|                                      [SF]
  209. |echo\thi|                                       [SF]
  210. |\techo\thi|                                     [SF]
  211. |\techo\thi|                                     [SF]
  212. |  \techo\thi|                                   [SF]
  213. |\techo\t   hi|                                  [SF]
  214. |many tabs|                                      [SF]
  215. |many spaces|                                    [SF]

    -----------------------[ tilde ]---------------------

  216. |~|                                              [SF]
  217. |echo hi~|                                       [SF]
  218. |echo ~|                                         [SF]
  219. |echo ~/path|                                    [SF]
  220. |echo ~$USER|                                    [SF]
  221. |echo ~false|                                    [SF]
  222. |echo ~|                                         [SF]
  223. |echo ~$USER/sdfsfsfdsfs|                        [SF]
  224. | echo ~|                                        [SF]

    -------------------[ syntax_error ]------------------

  225. |test|                                           [SF]
  226. ||test|                                          [SF]
  227. || test|                                         [SF]
  228. |< | test|                                       [SF]
  229. |<< | test|                                      [SF]
  230. |> | test|                                       [SF]
  231. |>> | test|                                      [SF]
  232. || < test|                                       [SF]
  233. || << test|                                      [SF]
  234. || > test|                                       [SF]
  235. || >> test|                                      [SF]
  236. || test|                                         [SF]
  237. |test | >|                                       [SF]
  238. |test | >>|                                      [SF]
  239. |test | <|                                       [SF]
  240. |echo hiecho hi|                                 [SF]
  241. |echo hi|echo hi|                                [SF]
  242. |echo hi |echo hi|                               [SF]
  243. |echo hi| echo hi|                               [SF]
  244. |echo hi | | echo hi|                            [SF]
  245. |echo hi ||| echo hi|                            [SF]
  246. |echo >|                                         [SF]
  247. |echo >>|                                        [SF]
  248. |echo <|                                         [SF]
  249. |echo >>>|                                       [SF]
  250. |echo <<<|                                       [SF]
  251. |echo hi >< file|                                [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:


  To see full failure traces -> traces/parse/*.txt


|=========================[ PIPES ]==========================|


  252. |echo | /bin/cat|                                [SF]
  253. |echo hi | /bin/cat|                             [SF]
  254. |cat /etc/shells | head -c 10|                   [SF]
  255. |cat -e /etc/shells | head -c 10|                [SF]
  256. |cat -e /etc/shells | cat -e | head -c 10|       [SF]
  257. |cat -e /etc/shells | cat -e | cat -e | h...|    [SF]
  258. |echo hola | cat|                                [SF]
  259. |echo hola | cat -e|                             [SF]
  260. |echo hola | cat -e | cat -n|                    [SF]
  261. |echo hola with many pipes cat -e|               [SF]
  262. |ls | cat -e|                                    [SF]
  263. |ls -l | cat -e|                                 [SF]
  264. |ls -l | cat -e | cat | cat | cat|               [SF]
  265. |ls -l | cat -e | cat -e | cat -e | cat -e|      [SF]
  266. |echo hola | asdf|                               [SF]
  267. |asdf | echo hola|                               [SF]
  268. |cat | cat | cat | ls|                           [K0]
  269. |sleep 1 | ls | cat -n|                          [SF]
  270. |cd folder | pwd|                                [SF]
  271. |ls pipes (255)|                                 [SF]
  272. |ls pipes (256)|                                 [SF]
  273. |ls pipes (257)|                                 [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 269 270 271 272 273 ]

  To see full failure traces -> traces/pipes_trace.txt


|======================[ REDIRECTIONS ]======================|


  274. |> no_cmd_file|                                  [SF]
  275. |>> no_cmd_test|                                 [SF]
  276. |echo hola | > filepipe|                         [SF]
  277. |> file_first | > file_second|                   [SF]
  278. |echo hi > file|                                 [SF]
  279. |echo hi >> file|                                [SF]
  280. |echo hi > *.txt|                                [SF]
  281. |echo >> file hi|                                [SF]
  282. |echo >> file2 hi|                               [SF]
  283. |> file echo hi|                                 [SF]
  284. |>> file echo hi|                                [K0]
  285. |echo hi > file2 > file hi|                      [SF]
  286. |echo hi >> file2 > file hi|                     [SF]
  287. |echo hi > file2 >> file hi|                     [SF]
  288. |echo hi > file2 > file hi|                      [SF]
  289. |echo hi >> file2 >> file hi|                    [SF]
  290. |echo hi>file2>file hi|                          [SF]
  291. |echo hi>>file2>>file hi|                        [SF]
  292. |echo hi > file3 > file2 > file hi|              [SF]
  293. |echo hi > file3 >> file2 > file hi|             [SF]
  294. |echo hi > file3 > file2 >> file hi|             [SF]
  295. |echo hi >> file3 > file2 > file hi|             [SF]
  296. |echo hi >> file3 > file2 >> file hi|            [SF]
  297. |echo hi >> file3 >> file2 > file hi|            [SF]
  298. |echo hi>file3>file2>file hi|                    [SF]
  299. |> file3 echo hi > file2 > file hi|              [SF]
  300. |> file3 echo hi > file2 >> file hi|             [SF]
  301. |>> file3 echo hi > file2 > file hi|             [SF]
  302. |> file3 echo hi >> file2 > file hi|             [SF]
  303. |>file3 echo hi>file2>file hi|                   [SF]
  304. |echo hi >filea>fileb>filec hi|                  [SF]
  305. |echo hi >filea>>fileb>filec hi|                 [SF]
  306. |echo hi >filea>fileb>>filec hi|                 [SF]
  307. |echo hi >>filea>fileb>filec hi|                 [SF]
  308. |echo hi > "doble"quote|                         [SF]
  309. |echo hi >"doble"quote|                          [SF]
  310. |echo -n hi >>"doble"quote|                      [SF]
  311. |echo hi > 'simple'quote|                        [SF]
  312. |echo hi >'simple'quote|                         [SF]
  313. |echo -n hi >>'simple'quote|                     [SF]
  314. |echo hi > 'with spaces'|                        [SF]
  315. |echo hi >>'with spaces'|                        [SF]
  316. |echo hi > "mixed"'file 'name|                   [SF]
  317. |echo hi >> "mixed"'file 'name|                  [SF]
  318. |echo hi 0> file|                                [SF]
  319. |4> file|                                        [SF]
  320. |echo hi > testfolder|                           [SF]
  321. |echo hi >> testfolder|                          [SF]
  322. |echo hi 2> testfolder|                          [SF]
  323. |echo hi 2>> testfolder|                         [SF]
  324. |echo hi > testfolder|                           [SF]
  325. |echo hi >> testfolder|                          [SF]
  326. |echo hi 2> testfolder|                          [SF]
  327. |echo hi 2>> testfolder|                         [SF]
  328. |echo > file hi (no permision)|                  [SF]
  329. |echo >> file2 hi (no permision)|                [SF]
  330. |> file echo hi (no permision)|                  [SF]
  331. |>> file3 echo hi (no permision)|                [SF]
  332. |cat < file|                                     [SF]
  333. |< file cat < file2|                             [SF]
  334. |cat < nonexist|                                 [SF]
  335. |cat < $USER|                                    [SF]
  336. |cat < file3 (no permision)|                     [SF]
  337. |echo hi 2> error_outp < non_exist|              [SF]
  338. |echo hi < non_exist > wrong|                    [SF]
  339. |< non_exist echo hi > wrong|                    [SF]
  340. |> correct echo hi < non_exist|                  [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 274 275 276 277 278 279 280 281 282 283 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 ]

  To see full failure traces -> traces/redirection_trace.txt


|=========================[ STATUS ]=========================|


  341. |echo $?|                                        [SF]
  342. |" "|                                            [SF]
  343. |echo $?|                                        [SF]
  344. |echo $?|                                        [SF]
  345. |cat < noexiste|                                 [SF]
  346. | echo $?|                                       [SF]
  347. |echo hola > noperm|                             [SF]
  348. | echo $?|                                       [SF]
  349. |echo hola < noperm|                             [SF]
  350. |echo $?|                                        [SF]
  351. |sleep 1 | ls | cat -n|                          [SF]
  352. |echo $?|                                        [SF]
  353. |sleep 1 | dddd|                                 [SF]
  354. | echo $?|                                       [SF]
  355. |nonexistcmd|                                    [SF]
  356. | echo $?|                                       [SF]
  357. |nonexistcmd | echo hi|                          [SF]
  358. | echo $?|                                       [SF]
  359. |echo hi | nonexistcmd|                          [SF]
  360. | echo $?|                                       [SF]
  361. |echo hi < nofile | nonexistcmd|                 [SF]
  362. | echo $?|                                       [SF]
  363. |echo hi < nofile | echo hii|                    [SF]
  364. |echo $?|                                        [SF]
  365. |/Users/nonexist/directory|                      [SF]
  366. |echo $?|                                        [SF]
  367. |cat /Users/nonexist/directory|                  [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 ]

  To see full failure traces -> traces/status_trace.txt


|=======================[ SHLVL TESTS ]======================|


  368. |echo $SHLVL 'entry value 20'|                   [SF]
  369. |echo $SHLVL 'entry value 50'|                   [SF]
  370. |echo $SHLVL 'entry value 99'|                   [SF]
  371. |echo $SHLVL 'entry value -20'|                  [SF]
  372. |echo $SHLVL 'entry value 800'|                  [SF]
  373. |echo $SHLVL 'entry value 1000'|                 [SF]
mpanic.sh: line 240: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 251: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 202: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 202: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 203: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 92: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 96: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 99: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 102: warning: shell level (4999999) too high, resetting to 1
mpanic.sh: line 112: warning: shell level (4999999) too high, resetting to 1
  374. |echo $SHLVL 'entry value 5000000'|              [SF]
mpanic.sh: line 240: warning: shell level (4999999) too high, resetting to 1
  375. |echo $SHLVL 'unset SHLVL before ./minishell'|   [SF]
  376. |echo $SLVL 'export SHLVL='' before ./minishell'|[SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 368 369 370 371 372 373 374 375 376 ]

  To see full failure traces -> traces/shlvl_trace.txt


|====================[ PANIC MANDATORY ]=====================|


  377. |rm -rf actual dir and cd .|                     [SF]
  378. |exit --|                                        [K0]
  379. |echo all &> file|                               [SF]
  380. |cd - (at start the minishell, OLDPWD sho...|    [SF]
  381. |cd - (deleted old path dir)|                    [SF]
  382. |cd -|                                           [SF]
  383. |echo ~ (without $HOME in env)|                  [SF]
  384. |playing with PWD an OLD|                        [SF]
  385. |playing with PWD an OLD|                        [SF]
  386. |echo <> file|                                   [SF]
  387. |cat < file 3< file2|                            [SF]
  388. |file with permission named echo|                [SF]


  It seems that there are some tests that have not passed...
  and your minishell gives segmentation fault at tests:
  [ 377 379 380 381 382 383 384 385 386 387 388 ]

  To see full failure traces -> traces/panic/panic_mandatory.txt


|=======================[ YOUR TESTS ]=======================|


 there goes your tests!


  All your test passed successfully!!

|============================================================|

  SUMARY                         [ OK ] [ KO ] [ SF ] [ TT ]
  [echo]                            0      0     18     18
  [export]                          0      0     16     16
  [env]                             0      0      8      8
  [exit]                            0     49      6     55
  [directory]                       0      0     23     23
  [dollars]                         0      0     33     33
  [quotes]                          0      0     52     52
  [spaces]                          0      0     10     10
  [tilde]                           0      0      9      9
  [syntax_error]                    0      0     27     27
  [pipe]                            0      1     48     49
  [redirection]                     0      1     66     67
  [status]                          0      0     27     27
  [shlvl]                           0      0      9      9
  [panic mandatory]                 0      1     11     12
  [your]                            0      0      0      0

  total                          [0000] [0052] [0336] [0388]


  Any issue send via slack bmoll-pe, arebelo or ailopez-o